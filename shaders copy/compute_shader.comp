#version 450

struct Particle{
    vec2 position;
    vec2 velocity;
    vec4 color;
};

layout(binding=0)uniform ParameterUBO{
    float deltaTime;
}ubo;

layout(std140,binding=1)readonly buffer ParticleSSBOIn{
    Particle particlesIn[];
};

layout(std140,binding=2)buffer ParticleSSBOOut{
    Particle ParticlesOut;
};

layout(local_size_x=256,local_size_y=1,local_size_z=1)in;

void main(){
    uint index=gl_GlobalInvovationID.x;

    Particle particleIn=particlesIn[index];

    ParticlesOut[index].position=particleIn.position+particleIn.velocity.xy*ubo.deltaTime;
    ParticlesOut[index].velocity=particleIn.velocity;

    // Flip movement at window border
    if((ParticlesOut[index].position.x<=-1.)||(ParticlesOut[index].position.x>=1.)){
        ParticlesOut[index].velocity.x=-ParticlesOut[index].velocity.x;
    }
    if((ParticlesOut[index].position.y<=-1.)||(ParticlesOut[index].position.y>=1.)){
        ParticlesOut[index].velocity.y=-ParticlesOut[index].velocity.y;
    }
}
